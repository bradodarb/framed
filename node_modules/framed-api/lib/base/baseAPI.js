
module.exports = function(app, options, base) {

    options = options || {};
    base = base || {};

    (function () {


        var _self = this;
        var _baseUrl = options.baseUrl || '/api/';
        var _dao = options.dao || null;
        var _collectionName = options.collection || null;


        if(_baseUrl[_baseUrl.length -1] !=='/'){
            _baseUrl+= '/';
        }

        ///Create
        app.post(_baseUrl + _collectionName + '/new', function (req, res, next) {

            var data = req.body;
            _dao.insert(data, function (err, result) {
                sendJSON(res, err, result, 201);
            });

            return next();
        });

        ///Query for many
        app.post(_baseUrl + _collectionName + '/many', function (req, res, next) {

            var options = req.body;
            _dao.find(options.query, options.fields, options.options, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });

        ///Simple Paging
        app.get(_baseUrl + _collectionName + '/page/:pageNum/:size', function (req, res, next) {
            var page = req.params.pageNum;
            var size = req.params.size;
            
            _dao.page({}, undefined, page, size, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });

        ///Simple Get All
        app.get(_baseUrl + _collectionName + '/all', function (req, res, next) {

            _dao.findAll(undefined, undefined, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });

        ///Filtered Get All
        app.post(_baseUrl + _collectionName + '/all', function (req, res, next) {

            var options = req.body;
            _dao.findAll(options.fields, options.options, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });

        ///Get by Id
        app.get(_baseUrl + _collectionName + '/single/:id', function (req, res, next) {

            _dao.findById(req.params.id, undefined, undefined, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });
        ///Get by Query
        app.post(_baseUrl + _collectionName + '/single', function (req, res, next) {

            var options = req.body;
            _dao.findOne(options.query, options.fields, options.options, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });

        //Update Many
        app.put(_baseUrl + _collectionName + '/many', function (req, res, next) {

            var options = req.body;
            _dao.updateMany(options.query, options.data, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });
        //Update
        app.put(_baseUrl + _collectionName + '/', function (req, res, next) {

            var options = req.body;
            _dao.updateById(options.data._id, options.data, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });
        ///Update Partial
        app.patch(_baseUrl + _collectionName + '/', function (req, res, next) {

            var options = req.body;
            _dao.update(options.query, {$set: options.data}, function (err, result) {
                sendJSON(res, err, result);
            });

            return next();
        });

        ///Delete
        app.del(_baseUrl + _collectionName + '/', function (req, res, next) {

            var query = req.body;
            _dao.delete(query, function (err, result) {
                sendJSON(res, err, result, 204);
            });

            return next();
        });
        ///Delete by Id
        app.del(_baseUrl + _collectionName + '/:id', function (req, res, next) {

            _dao.deleteById(req.params.id, function (err, result) {
                sendJSON(res, err, result, 204);
            });

            return next();
        });
        ///Delete All
        app.del(_baseUrl + _collectionName + '/all', function (req, res, next) {

            _dao.delete({}, function (err, result) {
                sendJSON(res, err, result, 204);
            });

            return next();
        });


        
        function sendJSON(res, err, result, code) {
            code = code || 200;
            res.status(code);
            res.setHeader('Content-Type', 'application/json');
            if (err) {
                res.send({error: err});
            } else {
                res.send({data: result});
            }
        }
    }).call(base, options);

    return base;
}

;